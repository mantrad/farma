{"version":3,"file":"static/js/876.760742ef.chunk.js","mappings":"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","sources":["../node_modules/@web3-onboard/common/node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@web3-onboard/common/node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@web3-onboard/common/node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@web3-onboard/common/node_modules/@ethereumjs/common/src/index.ts","../node_modules/crc-32/crc32.js","../node_modules/ethereumjs-util/src/account.ts","../node_modules/ethereumjs-util/src/address.ts","../node_modules/ethereumjs-util/src/bytes.ts","../node_modules/ethereumjs-util/src/constants.ts","../node_modules/ethereumjs-util/src/externals.ts","../node_modules/ethereumjs-util/src/hash.ts","../node_modules/ethereumjs-util/src/helpers.ts","../node_modules/ethereumjs-util/src/index.ts","../node_modules/ethereumjs-util/src/internal.ts","../node_modules/ethereumjs-util/src/object.ts","../node_modules/ethereumjs-util/src/signature.ts","../node_modules/ethereumjs-util/src/types.ts","../node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js"],"sourcesContent":["import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  4345: require('./4345.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  Shanghai = 'shanghai',\n  Merge = 'merge',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state, see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, chain1GenesisState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom({\n          name: CustomChain.PolygonMainnet,\n          chainId: 137,\n          networkId: 137,\n        })\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom({\n          name: CustomChain.PolygonMumbai,\n          chainId: 80001,\n          networkId: 80001,\n        })\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom({\n          name: CustomChain.ArbitrumRinkebyTestnet,\n          chainId: 421611,\n          networkId: 421611,\n        })\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom({\n          name: CustomChain.xDaiChain,\n          chainId: 100,\n          networkId: 100,\n        })\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1_1","chain","name_1","name","chainId","toString","exports","require","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_super","_this","_customChains","_b","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","_c","Istanbul","hardforks","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","__extends","Common","chainParamsOrName","baseChain","_a","standardChainParams","_getChainParams","__assign","PolygonMainnet","custom","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","ethereumjs_util_1","isBN","plainCustomChains","this","length","Array","isArray","map","e","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1_1","emit","blockNumber","td","toType","BN","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","concat","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","hfs_1_1","chainName","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2_1","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1_1","valueEIP","v","eipParams","activeHfs","activeHardforks","HARDFORK_CHANGES_3_1","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2_1","_d","hfs_2_1","push","Number","_getHardfork","eq","nextHardforkBlockBN","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","inputBuffer","forkhash","intToBuffer","data","resArray","filter","chainArrayWithGenesis","chainIdBN","networkIdBN","HARDFORK_CHANGES_4_1","HARDFORK_CHANGES_5_1","HARDFORK_CHANGES_6_1","consensusAlgorithm","Object","assign","create","getPrototypeOf","events_1","factory","CRC32","version","T0","c","table","n","Int32Array","signed_crc_table","TT","T","out","subarray","slice","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","i","L","charCodeAt","buf","B","str","d","DO_NOT_EXPORT_CRC","nonce","balance","stateRoot","codeHash","externals_1","constants_1","_validate","Account","accountData","toBuffer","serialized","values","decode","fromValuesArray","lt","bnToUnpaddedBuffer","encode","raw","equals","isZero","hexAddress","assertIsString","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","types_1","keccakFromString","ret","parseInt","toUpperCase","isValidAddress","toChecksumAddress","assertIsBuffer","nonceBN","rlphash","toArray","salt","initCode","keccak256","privateKey","privateKeyVerify","publicKey","sanitize","publicKeyVerify","pubKey","publicKeyConvert","keccak","publicKeyCreate","publicToAddress","privateToPublic","addr","zeros","bufferToHex","zeroAddress","Address","isBuffer","pubToAddress","privateToAddress","generateAddress","toArrayLike","generateAddress2","zero","addressBN","rangeMin","rangeMax","lte","isSafeInteger","hex","intToHex","padToEven","bytes","allocUnsafe","fill","setLength","right","copy","stripZeros","a","first","assertIsArray","Uint8Array","isHexString","isNeg","toNumber","num","fromTwos","toTwos","isHexPrefixed","replace","ba","array","baToJSON","entries","k","arrToBufArr","arr","bufArrToArr","buffer_1","bn_js_1","createHash","bits","keccak224","keccak384","keccak512","_sha256","update","digest","_ripemd160","padded","setLengthLeft","input","__exportStar","enumerable","get","getBinarySize","arrayContainsArray","toAscii","fromUtf8","fromAscii","getKeys","byteLength","superset","subset","some","indexOf","l","substring","code","String","fromCharCode","stringValue","params","key","allowEmpty","result","match","self","fields","_fields","toJSON","label","obj_1","field","serialize","getter","setter","allowZero","allowLess","unpadBuffer","defineProperty","configurable","set","default","alias","keys_1","keys","calculateSigRecovery","vBN","subn","sub","muln","addn","isValidSigRecovery","recovery","rec","eqn","msgHash","ecdsaSign","signature","r","s","senderPubKey","ecdsaRecover","vn","ss","sig","bufferToInt","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","cmp","message","TypeOutput","outputType","output","bn","max","MAX_SAFE_INTEGER","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","base","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","parseHexByte","lowerBound","parseBase","start","end","mul","b","len","Math","min","move","dest","src","left","_initNumber","_initArray","_parseHex","_parseBase","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","_move","clone","_expand","size","_normSign","Symbol","for","inspect","groupSizes","groupBases","padding","carry","groupSize","groupBase","modrn","idivn","smallMulTo","lo","ncarry","rword","maxJ","ArrayType","reqLength","res","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"sourceRoot":""}